// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: store.sql

package db

import (
	"context"
)

const createStore = `-- name: CreateStore :one
INSERT INTO stores (
    name
) VALUES (
    $1
)
RETURNING id, name, created_at, updated_at
`

func (q *Queries) CreateStore(ctx context.Context, name string) (Stores, error) {
	row := q.db.QueryRowContext(ctx, createStore, name)
	var i Stores
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getStore = `-- name: GetStore :one
SELECT id, name, created_at, updated_at FROM stores
WHERE name = $1
LIMIT 1
`

func (q *Queries) GetStore(ctx context.Context, name string) (Stores, error) {
	row := q.db.QueryRowContext(ctx, getStore, name)
	var i Stores
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
